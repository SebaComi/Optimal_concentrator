function [deformed_vertices] = RBF_MeshDeformation(mu, vertices)

%   This file is part of redbKIT.
%   Copyright (c) 2016, Ecole Polytechnique Federale de Lausanne (EPFL)
%   Author: Federico Negri <federico.negri at epfl.ch> 

dim = 2;

R     = 1;
a     = 0.05;
b     = 0.3;
l     = 0.5;
d     = 0.5;
thick = 0.02;


P_fixed = [  -1+d+l/4   a+thick/2+b/4;...
    -1+d+2*l/4   a+thick/2+2*b/4;...
    -1+d+3*l/4   a+thick/2+3*b/4;...
    -R+d+l       a+thick/2+b;...
    -R, 0;...
    R, 0;...
    0, R;...
    0, 0;...
    -R+d, a;...
    -R+d, a+thick;...
    -R+3*d/4,  a;...
    -R, a;...
    -R, a + thick;...
    -R*sqrt(2)/2, R*sqrt(2)/2; ...
    R*sqrt(2)/2, R*sqrt(2)/2; ...
    -R/2, 0;...
    R/2, 0;...
    -R + d/2, a;...
    -R + d/2, a+thick;...
    -0.38, 0;...
    0,     a+thick/2;...
    -R+d,  a+thick+b;
    -R+d/2,0;...
    -R+d+l/2, 0;...
    -R+d+3*l/4, 0;...
    -R+d/4, 0;...
    -R+3*d/4, 0;...
    R/4, 0;...
    3*R/4, 0;
    R*cos(pi/3), R*sin(pi/3);...
    R*cos(pi/6), R*sin(pi/6);...
    -R*cos(pi/3), R*sin(pi/3);...
    -R*cos(pi/6), R*sin(pi/6);...
    -R+3*d/4,  a+thick;...
    -R, a/2];


mu_points = [1 2;...
    2 2;...
    3 2;
    4 2];


P_displacement = 0*P_fixed;


for k_mu = 1 : size(mu_points,1)
    
    mu_k = mu(k_mu);
    P_displacement(mu_points(k_mu,1),mu_points(k_mu,2)) = mu_k;
    
end

const = [0.09 0.09];
displacement = 0 * vertices;

for i = 1 : dim
    RBF_data{i} = RBF_setup(P_fixed', P_displacement(:,i)', 'gaussian', const(i));
    displacement(i,:) = RBF_evaluate(vertices, RBF_data{i})';
end
deformed_vertices = vertices + displacement;

end